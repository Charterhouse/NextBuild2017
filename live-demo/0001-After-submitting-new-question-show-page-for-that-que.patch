From e3606f79466526ba7a6aff5e6167fa3193efce17 Mon Sep 17 00:00:00 2001
From: "Spanbroek, Mark" <mark@spanbroek.net>
Date: Mon, 15 May 2017 14:02:12 +0200
Subject: [PATCH] After submitting new question show page for that question.

---
 src/app-webapp/app/components/app/app.js           |  2 ++
 .../app/components/new-question/new-question.js    |  6 ++++
 .../app/components/show-question/package.json      |  3 ++
 .../app/components/show-question/show-question.js  | 32 ++++++++++++++++++++++
 4 files changed, 43 insertions(+)
 create mode 100644 src/app-webapp/app/components/show-question/package.json
 create mode 100644 src/app-webapp/app/components/show-question/show-question.js

diff --git a/src/app-webapp/app/components/app/app.js b/src/app-webapp/app/components/app/app.js
index fb756a3..6f498fd 100644
--- a/src/app-webapp/app/components/app/app.js
+++ b/src/app-webapp/app/components/app/app.js
@@ -3,6 +3,7 @@ import { Col } from 'react-bootstrap'
 import { HashRouter, Route } from 'react-router-dom'
 import Home from '../home'
 import NewQuestion from '../new-question'
+import ShowQuestion from '../show-question'
 import './app.css'
 
 class App extends React.Component {
@@ -11,6 +12,7 @@ class App extends React.Component {
       <Col sm={10} smOffset={1}>
         <h1><span>√êQuestions</span></h1>
         <Route path='/new' component={NewQuestion} />
+        <Route path='/questions/:id' component={ShowQuestion} />
         <Route path='/' exact component={Home} />
       </Col>
     </HashRouter>
diff --git a/src/app-webapp/app/components/new-question/new-question.js b/src/app-webapp/app/components/new-question/new-question.js
index d0a1d07..fcf58ca 100644
--- a/src/app-webapp/app/components/new-question/new-question.js
+++ b/src/app-webapp/app/components/new-question/new-question.js
@@ -68,7 +68,9 @@ class NewQuestion extends React.Component {
     this.setState({ isLoading: true })
     const questions = await DQuestions.deployed()
     await questions.add(this.state.question, getWeb3().sha3(this.state.answer))
+    const questionId = (await questions.numberOfQuestions()) - 1
     this.setState({ isLoading: false })
+    this.props.history.push(`/questions/${questionId}`)
   }
 
   validFormInput () {
@@ -77,4 +79,8 @@ class NewQuestion extends React.Component {
 
 }
 
+NewQuestion.propTypes = {
+  history: React.PropTypes.object
+}
+
 export default NewQuestion
diff --git a/src/app-webapp/app/components/show-question/package.json b/src/app-webapp/app/components/show-question/package.json
new file mode 100644
index 0000000..1647df3
--- /dev/null
+++ b/src/app-webapp/app/components/show-question/package.json
@@ -0,0 +1,3 @@
+{
+  "main": "show-question.js"
+}
diff --git a/src/app-webapp/app/components/show-question/show-question.js b/src/app-webapp/app/components/show-question/show-question.js
new file mode 100644
index 0000000..839cb73
--- /dev/null
+++ b/src/app-webapp/app/components/show-question/show-question.js
@@ -0,0 +1,32 @@
+import React from 'react'
+import { DQuestions } from '../../contracts'
+
+class ShowQuestion extends React.Component {
+
+  constructor (props) {
+    super(props)
+    this.state = { question: '' }
+  }
+
+  componentWillMount () {
+    this.retrieveQuestion(this.props.match.params.id)
+  }
+
+  render () {
+    return <div className='show-question'>
+      <h2>{ this.state.question }</h2>
+    </div>
+  }
+
+  async retrieveQuestion (id) {
+    const questions = await DQuestions.deployed()
+    const question = await questions.getQuestion(Number(id))
+    this.setState({ question: question })
+  }
+}
+
+ShowQuestion.propTypes = {
+  match: React.PropTypes.object
+}
+
+export default ShowQuestion
-- 
2.15.0

